MAKI C2


In Teilprojekt C2 werden Transitionen in ereignisverarbeitenden Kommunikationssystemen wie Publish/Subscribe und Complex Event Processing (CEP) erforscht. Diese Kommunikationsparadigmen zeichnen sich dadurch aus, dass sie eine entkoppelte Kommunikation zwischen Konsumenten und Produzenten ermöglichen, indem sie mittels eines Verbunds von Brokern und entsprechenden Operatoren dieWeiterleitung und Verarbeitung von Informationen organisieren. Die Sicherstellung von Dienstgütemerkmalen solcher Kommunikationssysteme ist in hochdynamischen Umgebungen eine große Herausforderung, da die Dienstgüte von einer Vielzahl von Parametern wie der Anbindung von Konsumenten und Produzenten, dem aktuellem Inhalt der Ereignisse sowie vom Lastprofil der auftretenden Ereignisse abhängt.

In Phase I von MAKI wurden Transitionen im Kontext des Publish/Subscribe-Paradigmas hinsichtlich der Dynamik untersucht, die für Kommunikationsmuster in mobilen sozialen Anwendungen charakteristisch ist. Niedrige Verzögerung und effiziente Bandbreitennutzung sind typische Anforderungen, die eine große Herausforderung in mobilen Umgebungen darstellen. Während Broker-basierte Publish/Subscribe-Verfahren durch Nutzung einer Infrastruktur Stabilität und Zuverlässigkeit erreichen, werden im Gegenzug oftmals unnötige Verzögerungen in der Verarbeitung der Ereignisse eingeführt und Ereignisse stark redundant übertragen. Anhand von Analysen realer Nutzungsdaten mobiler Anwendungen sowie Simulationsstudien wurde nachgewiesen, dass viele der Interaktionen von Produzenten und Konsumenten in mobilen sozialen Anwendungen eine hohe Lokalität aufweisen. Aufgrund dieser Beobachtung wurden Methoden zur Transition zwischen Kommunikationsformen konzipiert, in denen Geräte entweder mit einer dedizierten Infrastruktur oder direkt miteinander kommunizieren. Die erarbeiteten Methoden ermöglichen zudem die hybride Verwendung beider Kommunikationsformen. Die Ergebnisse zeigen, dass Transitionen zwischen den zugrundeliegenden Kommunikationsmechanismen in vielen Fällen zu einer signifikanten Reduktion der Ende-zu-Ende-Latenz und effizienteren Bandbreitennutzung führen. Weiterhin wurden Modelle entwickelt, die aufzeigen, wann die Durchführung einer Transition entlang verschiedener Dimensionen – wie etwa Anmelde- und Abmelderaten, Mobilität oder verschiedene Lastprofile von Ereignissen – von Vorteil ist.

In Phase II sollen Transitionsverfahren bezüglich ereignisverarbeitender Kommunikationssysteme erforscht werden, welche die Programmierbarkeit einer Netzinfrastruktur nutzen, um individuelle Benutzeranforderungen von Konsumenten zu erfüllen. Die zu entwickelnden Konzepte dieser Phase behandeln insbesondere die Beherrschung hoher Dynamik in den Benutzeranforderungen. Diese Dynamik ergibt sich beispielsweise aus Kontextwechseln der Benutzer, etwa durch Änderungen des Ortsbezugs durch Mobilität. Gleichzeitig soll eine höhere Generalität geschaffen werden, indem nun zusätzlich die für CEP-Systeme üblichen zustandsbehafteten Operatoren einbezogen werden. Für Transitionen in ereignisverarbeitenden Kommunikationssystemen ergeben sich zusätzliche Herausforderungen. Transitionen müssen insbesondere den Zustand der Operatoren einbeziehen, um eine korrekte Verarbeitung der Ereignisse zu gewährleisten. Weiterhin müssen Transitionen proaktiv gestaltet werden, so dass im Zuge hoher Dynamik aktuelle Ereignisse gemäß der Benutzeranforderungen ausgeliefert werden. Die Durchsetzung der Benutzeranforderungen von Transitionen in einer programmierbaren Infrastruktur erfordert zusätzlich Modelle zur Erfassung von Wechselwirkungen mit anderen koexistenten Multi- Mechanismen. Übergeordnetes Ziel des Teilprojekts ist es, diesen Herausforderungen durch einen ganzheitlichen Ansatz zu begegnen, der sowohlWechselwirkungen zwischen Programmiermodellen als auch Transitionen der Verarbeitungslogik durch sogenannte Operatorgraph-Transitionen sowie Transitionen der Funktionalität der Netzinfrastruktur umfasst.

Die geplante Forschung des Teilprojekts C2 umfasst erstens den Entwurf eines domänenspezifischen Programmiermodells für ereignisverarbeitende Systeme, das es erlaubt, variierende Benutzeranforderungen, Eigenschaften einer vernetzten Infrastruktur sowie deren Entwicklung zu beschreiben und mögliche Transitionsentscheidungen zu bewerten. Zweitens sollen Anpassungsverfahren analysiert und entworfen werden, die anhand sich kontinuierlich entwickelnder Anforderungen an das ereignisverarbeitende System geeignete Transitionen im Operatorgraph identifizieren. Drittens sollen gewinnbringende Transitionen von Infrastrukturelementen erkannt und Modelle entwickelt werden, die helfen, Wechselwirkungen zwischen Transitionen in der Funktionalität der Netzinfrastruktur und des Operatorgraphen zu beschreiben und zu verstehen. Die Forschungsergebnisse von C2 tragen im Rahmen des konkreten Kontexts ereignisverarbeitende Kommunikation zur Entwicklung von Programmierkonzepten, Erweiterung der Transitionsarchitektur sowie zur Entwicklung proaktiver modellbasierter Anpassungsverfahren in MAKI bei. Dies wird helfen, Transitionen in einer Software-definierten Welt zu bewerten und Wechselwirkungen mit anderen in MAKI modellierten Multi-Mechanismen zu erfassen.


MAKI A4
Das Teilprojekt A4 befasst sich mit der Untersuchung von Transitionsmechanismen sich selbst adaptierender Kommunikationssysteme auf Architekturebene. Dabei werden vornehmlich folgende Aspekte betrachtet: (1) Die Überwachung von Integritätsbedingungen erlaubt es, Selbst-Heilungsmaßnahmen bei Bedarf einzuleiten. (2) Für die Durchführung von Selbst-Optimierungsmaßnahmen werden multi-kriterielle Gütemaße betrachtet. Adaptionsschritte erfolgen zunächst reaktiv sobald Integritätsbedingungen verletzt sind oder Gütemaße Schwellwerte überschreiten. Darauf aufbauend werden neuartige, auf Prädiktion basierende Konzepte zur proaktiven SelbstAdaption definiert. Besondere Herausforderungen ergeben sich dadurch, dass (1) Kommunikationssysteme mit den oben skizzierten Eigenschaften i. A. eine verteilte Architektur besitzen und (2) von einer beliebigen Anzahl von Applikationen gleichzeitig genutzt werden, die um gemeinsame Kommunikationsressourcen konkurrieren. Transitionen koexistenter (Multi-)Mechanismen können dabei sowohl auf der Ebene des Kommunikationssystems als auch auf der Ebene der jeweiligen Anwendungsarchitektur ausgelöst werden. Verteilte Transitionen müssen deshalb schichten-, teilsystem- und applikationsübergreifend geplant und koordiniert werden.

Das Teilprojekt A4 entwickelt eine Methodik für den modellbasierten Entwurf des Rekonfigurationsverhaltens eines Kommunikationssystems auf Systemarchitekturebene sowie für die Koordination der Auslösung und Durchführung von anwendungs- und -schichtenübergreifend, koexistenten Transitionsmechanismen innerhalb einer Laufzeitumgebung. Zur Laufzeit verfügbare Modelle (Models@Runtime) beschreiben dabei sowohl den Raum aller betrachteten System- und Umgebungskonfigurationen mit den zugehörigen Integritätsbedingungen und Optimierungszielen als auch die zu bestimmten Zeitpunkten möglichen Transitionen in den definierten Konfigurationsräumen. Sie bilden damit die Wissensgrundlage für die entkoppelte Analyse, Planung, Auslösung und Durchführung von Transitionen. Die für proaktive Selbst-Adaption notwendigen Prädiktionsinformationen aus dem System selbst sowie aus seiner Umgebung (Kontext) werden in Form von stochastischen Modellen, z. B. probabilistischen Automaten, repräsentiert. Kontextmodelle charakterisieren dabei relevante (künftige) Änderungen des Verhaltens von Anwendungen und Nachbarsystemen des sich selbst adaptierenden Kommunikationssystems. Diese Methodik wird durch eine Laufzeitumgebung unterstützt, deren Kern die oben erwähnten Systemund Kontextmodelle bilden. Über die Knowledge-Komponente des bekannten MAPE-K-Modells werden die Laufzeitmodelle bereitgestellt. Dies ermöglicht insbesondere auch die Integration von Verfahren zur Prädiktion von Kontextänderungen, um proaktive Transitionen zu unterstützen.

Grundlage für diese Ziele von A4 bilden einerseits die Vorarbeiten am Lehrstuhl Becker der Universität Mannheim in den Bereichen Middleware für Pervasive Computing und adaptiver Systeme. Unterschiedliche Anwendungsmodelle für die Unterstützung von Adaptionsprozessen wurden bereits in verschiedenen Forschungsprojekten betrachtet. In aktuellen Arbeiten werden Architekturen für selbst-organisierende Systeme untersucht – mit Fokus auf der Partitionierung ihrer Adaptionslogik. Hiervon ausgehend werden in A4 die Wechselwirkungen von Transitionen auf der Kommunikationsund Anwendungsarchitektur studiert. Vorarbeiten am Fachgebiet Echtzeitsysteme der TU Darmstadt im Bereich Dynamischer Software-Produktlinien (DSPL) bieten andererseits eine ganzheitliche Methodik zur Modellierung des Rekonfigurationsverhaltens dynamischer Software-Komponenten, wie sie z. B. in adaptiven Kommunikationssystemen auftreten.Sie bieten zudem Techniken zur systematischen Validierung, Qualitätssicherung und Evolution adaptiver Systemen.

Das Teilprojekt A4 setzt Aktivitäten zur Spezifikation des Konfigurationsraums adaptiver Monitoring-Mechanismen aus dem B-Bereich auf Architekturebene fort und führt diese mit den in Teilprojekt A2 in Phase I präsentierten Architekturkonzepten zusammen. Im Kern der Untersuchung steht dabei die Knowledge-Komponente des MAPE-K-Modells und ihre Verwendung für die modellbasierte Koordination von Multi-Mechanismen-Transitionen. Die skizzierte Kombination aus DSPL- und Middleware-Konzepten bildet eine Methodik für den modellbasierten Entwurf der Adaptionslogik selbst-adaptiver Kommunikationssysteme und ermöglicht zudem Analysen sowohl zur Entwurfs- als auch Laufzeit. Die Variabilität von DSPL-Komponenten wird dabei mit Hilfe von Konfigurationsmodellen, z. B. als Feature-Modelle, formal spezifiziert; dies erlaubt die automatische Validierung und Analyse möglicher Systemkonfigurationen mit Constraint-Solvern. Zur Handhabung von komponenten- und schichtenübergreifender Variabilität verteilter Kommunikationsarchitekturen sind Erweiterungen bestehender DSPL-Ansätze um Konzepte aus den Bereichen dynamischer Multi-Produktlinien und Distributed Constraint Reasoning notwendig. Entsprechende Erweiterungen an Rekonfigurationsmodellen für die prädiktive, multi-kriterielle Selbst-Adaption umfassen die Integration stochastischer Kontextinformationen und zu optimierender Gütemaße.

Teilprojekt A4 verfolgt damit in Phase II das Ziel, schichtenübergreifend koexistente Adaptionsmechanismen verteilter Kommunikationssystem-Anwendungen auf Architekturebene zu untersuchen. Der Fokus liegt dabei auf reaktiver und proaktiver Selbst-Heilung und Selbst-Optimierung. Models@Runtime in verschiedenen Ausprägungen übernehmen die Rolle der Knowledge-Komponente im MAPE-K-Zyklus.


Das Teilprojekt A4 befasst sich mit der Untersuchung von Transitionsmechanismen sich selbst adaptierender Kommunikationssysteme auf Architekturebene. Dabei werden vornehmlich folgende Aspekte betrachtet: (1) Die Überwachung von Integritätsbedingungen erlaubt es, Selbst-Heilungsmaßnahmen bei Bedarf einzuleiten. (2) Für die Durchführung von Selbst-Optimierungsmaßnahmen werden multi-kriterielle Gütemaße betrachtet. Adaptionsschritte erfolgen zunächst reaktiv sobald Integritätsbedingungen verletzt sind oder Gütemaße Schwellwerte überschreiten. Darauf aufbauend werden neuartige, auf Prädiktion basierende Konzepte zur proaktiven SelbstAdaption definiert. Besondere Herausforderungen ergeben sich dadurch, dass (1) Kommunikationssysteme mit den oben skizzierten Eigenschaften i. A. eine verteilte Architektur besitzen und (2) von einer beliebigen Anzahl von Applikationen gleichzeitig genutzt werden, die um gemeinsame Kommunikationsressourcen konkurrieren. Transitionen koexistenter (Multi-)Mechanismen können dabei sowohl auf der Ebene des Kommunikationssystems als auch auf der Ebene der jeweiligen Anwendungsarchitektur ausgelöst werden. Verteilte Transitionen müssen deshalb schichten-, teilsystem- und applikationsübergreifend geplant und koordiniert werden.

Das Teilprojekt A4 entwickelt eine Methodik für den modellbasierten Entwurf des Rekonfigurationsverhaltens eines Kommunikationssystems auf Systemarchitekturebene sowie für die Koordination der Auslösung und Durchführung von anwendungs- und -schichtenübergreifend, koexistenten Transitionsmechanismen innerhalb einer Laufzeitumgebung. Zur Laufzeit verfügbare Modelle (Models@Runtime) beschreiben dabei sowohl den Raum aller betrachteten System- und Umgebungskonfigurationen mit den zugehörigen Integritätsbedingungen und Optimierungszielen als auch die zu bestimmten Zeitpunkten möglichen Transitionen in den definierten Konfigurationsräumen. Sie bilden damit die Wissensgrundlage für die entkoppelte Analyse, Planung, Auslösung und Durchführung von Transitionen. Die für proaktive Selbst-Adaption notwendigen Prädiktionsinformationen aus dem System selbst sowie aus seiner Umgebung (Kontext) werden in Form von stochastischen Modellen, z. B. probabilistischen Automaten, repräsentiert. Kontextmodelle charakterisieren dabei relevante (künftige) Änderungen des Verhaltens von Anwendungen und Nachbarsystemen des sich selbst adaptierenden Kommunikationssystems. Diese Methodik wird durch eine Laufzeitumgebung unterstützt, deren Kern die oben erwähnten Systemund Kontextmodelle bilden. Über die Knowledge-Komponente des bekannten MAPE-K-Modells werden die Laufzeitmodelle bereitgestellt. Dies ermöglicht insbesondere auch die Integration von Verfahren zur Prädiktion von Kontextänderungen, um proaktive Transitionen zu unterstützen.

Grundlage für diese Ziele von A4 bilden einerseits die Vorarbeiten am Lehrstuhl Becker der Universität Mannheim in den Bereichen Middleware für Pervasive Computing und adaptiver Systeme. Unterschiedliche Anwendungsmodelle für die Unterstützung von Adaptionsprozessen wurden bereits in verschiedenen Forschungsprojekten betrachtet. In aktuellen Arbeiten werden Architekturen für selbst-organisierende Systeme untersucht – mit Fokus auf der Partitionierung ihrer Adaptionslogik. Hiervon ausgehend werden in A4 die Wechselwirkungen von Transitionen auf der Kommunikationsund Anwendungsarchitektur studiert. Vorarbeiten am Fachgebiet Echtzeitsysteme der TU Darmstadt im Bereich Dynamischer Software-Produktlinien (DSPL) bieten andererseits eine ganzheitliche Methodik zur Modellierung des Rekonfigurationsverhaltens dynamischer Software-Komponenten, wie sie z. B. in adaptiven Kommunikationssystemen auftreten.Sie bieten zudem Techniken zur systematischen Validierung, Qualitätssicherung und Evolution adaptiver Systemen.

Das Teilprojekt A4 setzt Aktivitäten zur Spezifikation des Konfigurationsraums adaptiver Monitoring-Mechanismen aus dem B-Bereich auf Architekturebene fort und führt diese mit den in Teilprojekt A2 in Phase I präsentierten Architekturkonzepten zusammen. Im Kern der Untersuchung steht dabei die Knowledge-Komponente des MAPE-K-Modells und ihre Verwendung für die modellbasierte Koordination von Multi-Mechanismen-Transitionen. Die skizzierte Kombination aus DSPL- und Middleware-Konzepten bildet eine Methodik für den modellbasierten Entwurf der Adaptionslogik selbst-adaptiver Kommunikationssysteme und ermöglicht zudem Analysen sowohl zur Entwurfs- als auch Laufzeit. Die Variabilität von DSPL-Komponenten wird dabei mit Hilfe von Konfigurationsmodellen, z. B. als Feature-Modelle, formal spezifiziert; dies erlaubt die automatische Validierung und Analyse möglicher Systemkonfigurationen mit Constraint-Solvern. Zur Handhabung von komponenten- und schichtenübergreifender Variabilität verteilter Kommunikationsarchitekturen sind Erweiterungen bestehender DSPL-Ansätze um Konzepte aus den Bereichen dynamischer Multi-Produktlinien und Distributed Constraint Reasoning notwendig. Entsprechende Erweiterungen an Rekonfigurationsmodellen für die prädiktive, multi-kriterielle Selbst-Adaption umfassen die Integration stochastischer Kontextinformationen und zu optimierender Gütemaße.

Teilprojekt A4 verfolgt damit in Phase II das Ziel, schichtenübergreifend koexistente Adaptionsmechanismen verteilter Kommunikationssystem-Anwendungen auf Architekturebene zu untersuchen. Der Fokus liegt dabei auf reaktiver und proaktiver Selbst-Heilung und Selbst-Optimierung. Models@Runtime in verschiedenen Ausprägungen übernehmen die Rolle der Knowledge-Komponente im MAPE-K-Zyklus.

